{"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/ArithmeticableCollection.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/ArithmeticableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":18,"column":15},"end":{"line":18,"column":17}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":18}},"5":{"start":{"line":24,"column":8},"end":{"line":30,"column":9}},"6":{"start":{"line":25,"column":12},"end":{"line":25,"column":47}},"7":{"start":{"line":26,"column":12},"end":{"line":26,"column":29}},"8":{"start":{"line":29,"column":12},"end":{"line":29,"column":40}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":26},"end":{"line":22,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":29},"end":{"line":31,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":33},"end":{"line":34,"column":5}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":30,"column":9}},{"start":{"line":24,"column":8},"end":{"line":30,"column":9}}],"line":24},"1":{"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":54}},"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":21}},{"start":{"line":24,"column":25},"end":{"line":24,"column":54}}],"line":24}},"s":{"0":1,"1":1,"2":4,"3":8,"4":8,"5":3,"6":1,"7":1,"8":2,"9":1,"10":1},"f":{"0":8,"1":3,"2":1},"b":{"0":[1,2],"1":[3,3]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/ArithmeticableCollection.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/ArithmeticableCollection.ts"],"names":[],"mappings":";;;AAGA;;;;;;;;;;;;GAYG;AACH,MAAc,wBAAwB;IAE5B,QAAQ,GAAQ,EAAE,CAAC;IAE3B,iBAAiB,CAAC,EAAK;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,iBAAiB,CAAC,KAAa;QAC7B,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,SAAS,CAAC;SAClB;aACI;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC7B;IACH,CAAC;IAGD,0BAA0B;QACxB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC9B,CAAC;CAGF;AAzBD,4DAyBC","sourcesContent":["\nimport { Arithmeticable } from './Arithmeticable';\n\n/**\n * Clase generica para colecciones de operaciones aritmeticas\n * \n * @export\n * @class ArithmeticableCollection  \n * @template T\n * \n * @method addArithmeticable AÃ±ade una operacion aritmetica a la coleccion\n * @method getArithmeticable Devuelve la operacion aritmetica en la posicion indicada\n * @method getNumberOfArithmeticables Devuelve el numero de operaciones aritmeticas en la coleccion\n * \n * \n */\nexport  class ArithmeticableCollection<T extends Arithmeticable<T>> {\n\n  private elements: T[] = [];\n\n  addArithmeticable(op: T): T {\n    this.elements.push(op);\n    return op;\n  }\n\n  getArithmeticable(index: number): T | undefined {\n    if (index < 0 || index >= this.elements.length) {\n      console.log('Index out of bounds');\n      return undefined;\n    }\n    else {\n      return this.elements[index];\n    }\n  }\n\n\n  getNumberOfArithmeticables(): number {\n    return this.elements.length;\n  }\n\n\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac650df14c4d3954b020723215d4c43b43d86615","contentHash":"5931fa9d247e9f2c059aad0019bc122412ab4a06a33739161c5a7c8d9cd6d011"},"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Complex.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Complex.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},"4":{"start":{"line":31,"column":8},"end":{"line":31,"column":79}},"5":{"start":{"line":41,"column":8},"end":{"line":41,"column":79}},"6":{"start":{"line":44,"column":8},"end":{"line":44,"column":133}},"7":{"start":{"line":47,"column":8},"end":{"line":47,"column":241}},"8":{"start":{"line":50,"column":0},"end":{"line":50,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":33},"end":{"line":22,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":17},"end":{"line":42,"column":5}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":17},"end":{"line":45,"column":5}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":15},"end":{"line":48,"column":5}},"line":46}},"branchMap":{},"s":{"0":1,"1":1,"2":24,"3":24,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":24,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Complex.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Complex.ts"],"names":[],"mappings":";;;AAKA;;;;;;;;;;;GAWG;AACH,MAAa,OAAO;IACV,IAAI,CAAS;IACb,SAAS,CAAS;IAE1B,YAAY,IAAY,EAAE,SAAiB;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED;;;;;;OAMG;IACH,GAAG,CAAC,EAAW;QACb,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;IAED;;;;;;OAMG;IACH,QAAQ,CAAC,EAAW;QAClB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;IAED,QAAQ,CAAC,EAAW;QAClB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IAC/H,CAAC;IAED,MAAM,CAAC,EAAW;QAChB,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3O,CAAC;CAEF;AAvCD,0BAuCC","sourcesContent":["\n\n\nimport { Arithmeticable } from \"./Arithmeticable\";\n\n/**\n * Clase Complex para representar numeros complejos\n * \n * @export\n * @class Complex\n * @implements {Arithmeticable<Complex>}\n * \n * @method add Suma\n * @method subtract Resta\n * @method multiply Multiplicacion\n * @method divide Division\n */\nexport class Complex implements Arithmeticable<Complex> {\n  private real: number;\n  private imaginary: number;\n\n  constructor(real: number, imaginary: number) {\n    this.real = real;\n    this.imaginary = imaginary;\n  }\n\n  /**\n   * \n   * @param op \n   * @returns  {Complex}\n   * \n   * @description Suma dos numeros complejos\n   */\n  add(op: Complex): Complex {\n    return new Complex(this.real + op.real, this.imaginary + op.imaginary);\n  }\n\n  /**\n   * \n   * @param op \n   * @returns  {Complex}\n   * \n   * @description Suma dos numeros complejos\n   */\n  subtract(op: Complex): Complex {\n    return new Complex(this.real - op.real, this.imaginary - op.imaginary);\n  }\n\n  multiply(op: Complex): Complex {\n    return new Complex(this.real * op.real - this.imaginary * op.imaginary, this.real * op.imaginary + this.imaginary * op.real);\n  }\n\n  divide(op: Complex): Complex {\n    return new Complex((this.real * op.real + this.imaginary * op.imaginary) / (op.real * op.real + op.imaginary * op.imaginary), (this.imaginary * op.real - this.real * op.imaginary) / (op.real * op.real + op.imaginary * op.imaginary));\n  }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6a4f31fbff2707b66ea9da20f1353098d73d99ee","contentHash":"d4dadaedf72774706908f45f13942d649e501568691df24aa9125ca3828530f7"},"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Rational.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Rational.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":22,"column":8},"end":{"line":22,"column":35}},"3":{"start":{"line":23,"column":8},"end":{"line":23,"column":39}},"4":{"start":{"line":34,"column":8},"end":{"line":34,"column":130}},"5":{"start":{"line":45,"column":8},"end":{"line":45,"column":130}},"6":{"start":{"line":56,"column":8},"end":{"line":56,"column":94}},"7":{"start":{"line":67,"column":8},"end":{"line":67,"column":94}},"8":{"start":{"line":70,"column":0},"end":{"line":70,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":40},"end":{"line":24,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":12},"end":{"line":35,"column":5}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":17},"end":{"line":46,"column":5}},"line":44},"3":{"name":"(anonymous_3)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":17},"end":{"line":57,"column":5}},"line":55},"4":{"name":"(anonymous_4)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":15},"end":{"line":68,"column":5}},"line":66}},"branchMap":{},"s":{"0":1,"1":1,"2":16,"3":16,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":16,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Rational.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct06-generics-solid-AlbertoZarzaM/src/1PE102/Rational.ts"],"names":[],"mappings":";;;AAEA;;;;;;;;;;;;;GAaG;AACH,MAAa,QAAQ;IAEX,SAAS,CAAS;IAClB,WAAW,CAAS;IAE5B,YAAY,SAAiB,EAAE,WAAmB;QAChD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED;;;;;;;OAOG;IACH,GAAG,CAAC,EAAY;QACd,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;IAC5H,CAAC;IAGD;;;;;;;OAOG;IACH,QAAQ,CAAC,EAAY;QACnB,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;IAC5H,CAAC;IAED;;;;;;;OAOG;IACH,QAAQ,CAAC,EAAY;QACnB,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;IACxF,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CAAC,EAAY;QACjB,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;IACxF,CAAC;CAEF;AA3DD,4BA2DC","sourcesContent":["import { Arithmeticable } from \"./Arithmeticable\";\n\n/**\n * Clase para representar numeros racionales\n * \n * @export\n * @class Rational\n * @implements {Arithmeticable<Rational>}\n * \n * @method add Suma\n * @method subtract Resta\n * @method multiply Multiplicacion\n * @method divide Division\n * \n * \n */\nexport class Rational implements Arithmeticable<Rational> {\n\n  private numerator: number;\n  private denominator: number;\n\n  constructor(numerator: number, denominator: number) {\n    this.numerator = numerator;\n    this.denominator = denominator;\n  }\n\n  /**\n   * \n   * @param op \n   * @returns  {Rational}\n   * \n   * @description Suma dos numeros racionales\n   * \n   */\n  add(op: Rational): Rational {\n    return new Rational(this.numerator * op.denominator + this.denominator * op.numerator, this.denominator * op.denominator);\n  }\n\n\n  /**\n   * \n   * @param op \n   * @returns  {Rational}\n   * \n   * @description Resta dos numeros racionales\n   * \n   */\n  subtract(op: Rational): Rational {\n    return new Rational(this.numerator * op.denominator - this.denominator * op.numerator, this.denominator * op.denominator);\n  }\n\n  /**\n   * \n   * @param op \n   * @returns  {Rational}\n   * \n   * @description Multiplica dos numeros racionales\n   * \n   */\n  multiply(op: Rational): Rational {\n    return new Rational(this.numerator * op.numerator, this.denominator * op.denominator);\n  }\n\n  /**\n   * \n   * @param op \n   * @returns  {Rational}\n   * \n   * @description Divide dos numeros racionales\n   * \n   */\n  divide(op: Rational): Rational {\n    return new Rational(this.numerator * op.denominator, this.denominator * op.numerator);\n  }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1a29b0b2101943c0ca1312a1a845d4b02149560e","contentHash":"27acd979bee5c79c4807ce38e6a19311bec57aa4f713619761a5f55c5a53905c"}}